.myBlockCostcontrol{padding-top:0}.myBlockCostcontrol .modContainer{height:70vh;margin:0 auto;max-width:1680px;overflow:auto;padding-right:30px}.myBlockCostcontrol .modContainer .modTable{border-collapse:separate;border-spacing:0;margin-bottom:10px;min-width:1680px;table-layout:auto}.myBlockCostcontrol .modContainer .modTable td,.myBlockCostcontrol .modContainer .modTable th{border:1px solid #000;border-left:none;border-top:none;padding:5px 10px}.myBlockCostcontrol .modContainer .modTable thead{left:0;position:sticky;top:0;z-index:1}.myBlockCostcontrol .modContainer .modTable thead th{text-align:center}.myBlockCostcontrol .modContainer .modTable thead tr:first-child th{border-top:1px solid #000}.myBlockCostcontrol .modContainer .modTable tbody tr td:first-child,.myBlockCostcontrol .modContainer .modTable thead tr:first-child th:first-child{border-left:1px solid #000}.myBlockCostcontrol .modContainer .modTable tbody td{font-weight:600;text-align:right}.myBlockCostcontrol .modContainer .modTable tbody td.profit span{display:block;line-height:normal}.modTableBlock{margin-bottom:30px}.modTableBlock>.modTable{margin:0;width:auto}.modTableBlock>.modTable td,.modTableBlock>.modTable th{padding:5px 0;width:auto}@media not all and (min-width:768px){.modTableBlock>.modTable td,.modTableBlock>.modTable th{background:10px 0;display:block;width:100%}}.modTableBlock>.modTable td{padding-left:30px}@media not all and (min-width:768px){.modTableBlock>.modTable td{padding-left:0}}.modTableBlock modSearch--label{border:1px solid #d5d5d5;border-radius:4px;box-shadow:none;color:#169e6a;font-weight:700}.modTableBlock modSearch--input{height:40px}.modTableBlock modSearch--input::-moz-placeholder{color:#05281a;font-weight:700}.modTableBlock modSearch--input:-ms-input-placeholder{color:#05281a;font-weight:700}.modTableBlock modSearch--input::placeholder{color:#05281a;font-weight:700}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
